Man kann einen Pool von Belohnungen erstellen und dann einzelen Tasks Belohnungen zuteilen

Es gibt Statistiken wie birndown etc. Auch grafisch

Speichern der TODOs für die einzelnen Benutzer zentral in der Cloud -> damit App auf verschiedenen Geräten gleichermaßen verwendet werden kann -> Anmeldung/Registroerung nötig
Auch Option ohne Registrierung mit lokalem Speicher anbieten!


Wochenansicht und ich kann Aufgaben den eknzelnen Wochentagen zuordnen!
-> bzw. Zuordnung sollte automatisch erfolgen da jede Aufgabe sowieso Fälligkeitsdatum enthält?

Suchfunktion!

wie groß ist Grad der Verschachtelung? -> 1
was wird in einem Arbeitsschritt gespeichert? -> alles ausser Arbeitsschritte
wird übergeordnete Aufgabe bei Erfüllung aller Arbeitsschritte ebenfalls abgeschlossen? ->
wie sind Aufgaben sortiert? Kann der Benutzer eine eigene Sortierung vornehmen?
gibt es eine Suchfunktion? Filter?


Probleme bei Statistiken -> woher kommen die Daten?
Abfrage von durchschnittlicher Bearbeitungsdauer setzt Speicherung von Erstellungsdatum für jede Aufgabe voraus!!!

Immer RunTimeException erben um try-catch-Hölle zu vermeiden

Exkurs zu Aggregaten und Projektionen:
- Aggregate performancetechnisch schlecht, da immer über Aggregat-Root gegangen werden muss
- Aggregate verhindern unkontrollierte Änderungen und Laden von Daten
- Lösung für gute Performance: "Lesemodell"/Projektionen -> nur zum Lesen sodass keine Änderungen möglich
- Projektionen bilden Lese-Queries in einer DB ab (können Aggregate umgehen)
- s. CQS und CQRS
- Die Projektionen sind die Ojekte (boiler plate code) mit nur Lesezugriff

Referenz: https://github.com/mirkobeine/cleanproject

1. Sprechstunde: Exkurs Architektur
- Hexagonale Architektur bzw. "Ports and Adapters"
- Onion Architektur
- Clean Architektur
    - Abhängigkeiten zeigen immer nach außen!!!
    - Plugins
    - Adapters
    - Application
    - Domain
    - Abstractioncode